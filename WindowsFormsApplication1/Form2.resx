<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>